<?php

namespace Myaf\Core;

/**
 * Class ControlWeb.
 * Web Controller基类.
 * (核心类勿改)
 * @package Core
 */
abstract class WebController extends Controller
{
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        header("server: myaf");
    }

    /**
     * 设置HTTP STATUS_CODE
     * @param $code int
     * @return $this
     */
    public function statusCode($code)
    {
        $status = [
            // Informational 1xx
            100 => 'Continue',
            101 => 'Switching Protocols',
            // Success 2xx
            200 => 'OK',
            201 => 'Created',
            202 => 'Accepted',
            203 => 'Non-Authoritative Information',
            204 => 'No Content',
            205 => 'Reset Content',
            206 => 'Partial Content',
            // Redirection 3xx
            300 => 'Multiple Choices',
            301 => 'Moved Permanently',
            302 => 'Moved Temporarily ',  // 1.1
            303 => 'See Other',
            304 => 'Not Modified',
            305 => 'Use Proxy',
            // 306 is deprecated but reserved
            307 => 'Temporary Redirect',
            // Client Error 4xx
            400 => 'Bad Request',
            401 => 'Unauthorized',
            402 => 'Payment Required',
            403 => 'Forbidden',
            404 => 'Not Found',
            405 => 'Method Not Allowed',
            406 => 'Not Acceptable',
            407 => 'Proxy Authentication Required',
            408 => 'Request Timeout',
            409 => 'Conflict',
            410 => 'Gone',
            411 => 'Length Required',
            412 => 'Precondition Failed',
            413 => 'Request Entity Too Large',
            414 => 'Request-URI Too Long',
            415 => 'Unsupported Media Type',
            416 => 'Requested Range Not Satisfiable',
            417 => 'Expectation Failed',
            // Server Error 5xx
            500 => 'Internal Server Error',
            501 => 'Not Implemented',
            502 => 'Bad Gateway',
            503 => 'Service Unavailable',
            504 => 'Gateway Timeout',
            505 => 'HTTP Version Not Supported',
            509 => 'Bandwidth Limit Exceeded'
        ];
        if (array_key_exists($code, $status)) {
            header('HTTP/1.1 ' . $code . ' ' . $status[$code]);
        }
        return $this;
    }

    /**
     * $_GET
     * @param null $name
     * @return bool
     */
    public function get($name = null)
    {
        if (!$name) {
            return $this->req->getQuery();
        }
        return $this->req->getQuery($name);
    }

    /**
     * $_POST
     * @param null $name
     * @return bool
     */
    public function post($name = null)
    {
        if (!$name) {
            return $this->req->getPost();
        }
        return $this->req->getPost($name);
    }

    /**
     * $_COOKIE
     * @param null $name
     * @return bool
     */
    public function cookie($name = null)
    {
        if (!$name) {
            return $this->req->getCookie();
        }
        return $this->req->getCookie($name);
    }

    /**
     * $_FILES
     * @param null $name
     * @return bool
     */
    public function files($name = null)
    {
        if (!$name) {
            return $this->req->getFiles();
        }
        return $this->req->getFiles($name);
    }

    /**
     * 下载文件.
     * @param $fileName string 下载目录下的文件名称
     */
    public function download($fileName)
    {
        if (!G::download($fileName)) {
            $this->statusCode(404)->send($fileName . ' Not Found');
        }
    }
}